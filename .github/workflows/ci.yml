name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      # Run linting and testing
      - run: npx nx affected -t lint test

      # Build the portfolio app for production
      - run: npx nx build portfolio --configuration=production

      # Upload build artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: portfolio-dist
          path: dist/apps/portfolio/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      # Download build artifacts
      - uses: actions/download-artifact@v4
        with:
          name: portfolio-dist
          path: dist/

      # Deploy to DigitalOcean Droplet
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: ${{ secrets.DROPLET_PORT || 22 }}
          script: |
            # Create web directory if it doesn't exist
            sudo mkdir -p /var/www/portfolio
            
            # Stop nginx temporarily
            sudo systemctl stop nginx
            
            # Backup current deployment
            sudo rm -rf /var/www/portfolio/backup
            sudo mv /var/www/portfolio/current /var/www/portfolio/backup || true
            
            # Create new deployment directory
            sudo mkdir -p /var/www/portfolio/current

      # Copy files to DigitalOcean
      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: ${{ secrets.DROPLET_PORT || 22 }}
          source: "dist/*"
          target: "/var/www/portfolio/current/"
          strip_components: 1

      # Finalize deployment
      - name: Finalize deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          passphrase: ${{ secrets.DROPLET_SSH_PASSPHRASE }}
          port: ${{ secrets.DROPLET_PORT || 22 }}
          script: |
            # Set proper permissions
            sudo chown -R www-data:www-data /var/www/portfolio/current
            sudo chmod -R 755 /var/www/portfolio/current
            
            # Start nginx
            sudo systemctl start nginx
            sudo systemctl reload nginx
            
            # Verify deployment
            curl -f http://localhost || (echo "Deployment failed" && exit 1)
